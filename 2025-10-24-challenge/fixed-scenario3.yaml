---
# Staging 환경 최적화 (Production의 50% 수준)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: staging
  labels:
    app: frontend
    tier: frontend
    cost-center: CC-1002
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 20m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: staging
  labels:
    app: user-service
    tier: backend
    cost-center: CC-1002
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        tier: backend
    spec:
      containers:
      - name: user-service
        image: nginx:alpine
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 20m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: staging
  labels:
    app: product-service
    tier: backend
    cost-center: CC-1002
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
        tier: backend
    spec:
      containers:
      - name: product-service
        image: nginx:alpine
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 20m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: development
  labels:
    app: frontend
    tier: frontend
    cost-center: CC-1003
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 32Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: development
  labels:
    app: user-service
    tier: backend
    cost-center: CC-1003
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        tier: backend
    spec:
      containers:
      - name: user-service
        image: nginx:alpine
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 32Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: development
  labels:
    app: product-service
    tier: backend
    cost-center: CC-1003
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
        tier: backend
    spec:
      containers:
      - name: product-service
        image: nginx:alpine
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 32Mi
